name: Laravel
on:
  push:
    branches: [ master ]
jobs:
  laravel-linter:
    runs-on: ubuntu-latest
    steps:
    - uses: StephaneBour/actions-php-lint@7.4

  laravel-tests:
    needs: laravel-linter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit --coverage-test
  
  docker-build-and-push:
    needs: laravel-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker build
      run: |
        docker build . -t ${{secrets.REGISTRY_URL}}/${{secrets.GKE_PROJECT_ID }}/${{secrets.DOCKER_IMAGE_NAME}}:${GITHUB_SHA::8} -t ${{secrets.REGISTRY_URL}}/${{ secrets.GKE_PROJECT_ID }}/${{secrets.DOCKER_IMAGE_NAME}}:latest
        echo ${{secrets.GCP_KEY_FILE}} | base64 -d > account.json
        cat account.json | docker login -u _json_key --password-stdin https://${{secrets.REGISTRY_URL}}
        docker push ${{secrets.REGISTRY_URL}}/${{ secrets.GKE_PROJECT_ID }}/${{secrets.DOCKER_IMAGE_NAME}}
        docker logout
  
  k8-deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GKE_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_KEY_FILE }}
          export_default_credentials: true

      - name: Deploy system to app engine
        run: |-
          rm Dockerfile
          sed -i "s/_DB_CONNECTION/${{ secrets.DB_CONNECTION }}/g" app.yaml
          sed -i "s/_DB_USERNAME/${{ secrets.DB_USERNAME }}/g" app.yaml
          sed -i "s/_DB_PASSWORD/${{ secrets.DB_PASSWORD }}/g" app.yaml
          sed -i "s/_DB_DATABASE/${{ secrets.DB_DATABASE }}/g" app.yaml
          sed -i "s/CLOUD_SQL_CONNECTION_NAME/${{ secrets.CLOUD_SQL_CONNECTION_NAME }}/g" app.yaml
          gcloud app deploy app.yaml -q --promote --stop-previous-version
      
      - name: Deploy system to gke
        run: |-
          gcloud --quiet auth configure-docker
          gcloud container clusters get-credentials ${{secrets.GKE_CLUSTER_ID}} --zone ${{secrets.GKE_ZONE}} --project ${{ secrets.GKE_PROJECT_ID }}
          sed -i "s|IMAGE|${{secrets.REGISTRY_URL}}/${{ secrets.GKE_PROJECT_ID }}/${{secrets.DOCKER_IMAGE_NAME}}:${GITHUB_SHA::8}|g" k8s/deployment.yaml
          sed -i "s/_DB_HOST/${{ secrets.DB_HOST }}/g" k8s/deployment.yaml
          sed -i "s/_DB_CONNECTION/${{ secrets.DB_CONNECTION }}/g" k8s/deployment.yaml
          sed -i "s/_DB_PORT/${{ secrets.DB_PORT }}/g" k8s/deployment.yaml
          sed -i "s/_DB_DATABASE/${{ secrets.DB_DATABASE }}/g" k8s/deployment.yaml
          sed -i "s/_DB_USERNAME/${{ secrets.DB_USERNAME }}/g" k8s/deployment.yaml
          sed -i "s/_DB_PASSWORD/${{ secrets.DB_PASSWORD }}/g" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
